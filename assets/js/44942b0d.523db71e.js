"use strict";(self.webpackChunkcasdk_docs=self.webpackChunkcasdk_docs||[]).push([[2128],{1617:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var i=t(4848),a=t(8453);const r={},o="8. Data Source Configuration",s={id:"architecture/decisions/data-source-configuration",title:"8. Data Source Configuration",description:"Status",source:"@site/docs/architecture/decisions/0008-data-source-configuration.md",sourceDirName:"architecture/decisions",slug:"/architecture/decisions/data-source-configuration",permalink:"/docs/architecture/decisions/data-source-configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/Green-Software-Foundation/carbon-aware-sdk/docs/architecture/decisions/0008-data-source-configuration.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"7. Data Source Interfaces",permalink:"/docs/architecture/decisions/data-source-interfaces"},next:{title:"9. SDK as a C# Client Library",permalink:"/docs/architecture/decisions/sdk-as-a-csharp-client-library"}},c={},d=[{value:"Status",id:"status",level:2},{value:"Date",id:"date",level:2},{value:"Context",id:"context",level:2},{value:"Decision",id:"decision",level:2},{value:"Consequences",id:"consequences",level:2},{value:"Implementation",id:"implementation",level:3},{value:"Green Impact",id:"green-impact",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"8-data-source-configuration",children:"8. Data Source Configuration"})}),"\n",(0,i.jsx)(n.h2,{id:"status",children:"Status"}),"\n",(0,i.jsx)(n.p,{children:"Accepted"}),"\n",(0,i.jsx)(n.h2,{id:"date",children:"Date"}),"\n",(0,i.jsx)(n.p,{children:"2022-11-1"}),"\n",(0,i.jsx)(n.h2,{id:"context",children:"Context"}),"\n",(0,i.jsx)(n.p,{children:"The current CarbonAware configuration is not intuitive for a user because it\nhides the relationships between entities, and so requires deep reading of the\ndocumentation to properly configure. This challenge is amplified for use-cases\nwhere different interfaces can be configured with different data sources. EG:\nJSON data source for emissions, but WattTime data source for forecast data."}),"\n",(0,i.jsx)(n.h2,{id:"decision",children:"Decision"}),"\n",(0,i.jsx)(n.p,{children:"A top-level 'DataSources' section will specify all of the data source\nconfiguration needs for the consumer."}),"\n",(0,i.jsx)(n.p,{children:"Within that, specific data source configurations will be defined in the\n'Configurations' section. Each item containing the parameters required for\nconfiguring the data source in its entirety EG: client config, file paths,\nadditional parameters, etc."}),"\n",(0,i.jsx)(n.p,{children:"Each data source interface can then be configured by referencing these\n'Configurations' by their key."}),"\n",(0,i.jsx)(n.p,{children:"The resulting 'DataSources' config schema being:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "DataSources": {\n    <DataSourceInterface Key1>: <\'Configurations\' Key String>,\n    <DataSourceInterface Key2>: <\'Configurations\' Key String>,\n    //...\n    "Configurations": {\n      <ConfigKey1>: {\n        "Type": <string enum of data source implementation>,\n        <Additional config key for this type>: <value>,\n        <Additional config key for this type>: <value>,\n        //...\n      },\n      <ConfigKey2>: {\n        //...\n      },\n      //...\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"consequences",children:"Consequences"}),"\n",(0,i.jsx)(n.p,{children:"The configuration scheme is flexible and extensible to support any new\ninterfaces and data sources. It reflects the relationship between data sources\nand all of their relevant configuration values."}),"\n",(0,i.jsx)(n.h3,{id:"implementation",children:"Implementation"}),"\n",(0,i.jsx)(n.p,{children:"Here is an example of the proposed configuration schema change with multiple\npotential data source interfaces:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n "DataSources": {\n    "CarbonIntensityDataSource": "WattTime",\n    "EnergyDataSource": "ElectricityMaps",\n    "EmbodiedCarbonDataSource": "ElectricityMaps",\n    "Configurations": {\n      "WattTime": {\n        "Type": "CarbonAware.DataSources.WattTime",\n        "ClientConfiguration": {\n          "Username": "username",\n          "Password": "password",\n          "BaseURL": "https://api2.watttime.org/v2/"\n        }\n      },\n      "ElectricityMaps": {\n        "Type": "CarbonAware.DataSources.ElectricityMaps",\n        "ClientConfiguration": {\n          "API_Key": "abcd",\n          "BaseURL": "https://api.electricitymap.org/v3/"\n        },\n        "disableEstimations": "true",\n        "emissionsFactorType": "lifecycle"\n      }\n    }\n  }\n'})}),"\n",(0,i.jsxs)(n.p,{children:["During initialization of the interface, the config will read to get the data\nsource associated with it. For example, when a ",(0,i.jsx)(n.code,{children:"CarbonIntensityDataSource"})," is\ninitialized, it will get the corresponding value from the config, which is\n'WattTime' in the above example. It then looks up the value of the 'WattTime'\nkey in the 'Configurations' section. The object retrieved from the config will\nbe then used to load and configure the ",(0,i.jsx)(n.code,{children:"WattTimeDataSource"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:['This "by-reference" configuration enables operators to use the same\nconfiguration for multiple data source interfaces without requiring duplication,\nas shown in the above example with the hypothetical ',(0,i.jsx)(n.code,{children:"EnergyDataSource"})," and\n",(0,i.jsx)(n.code,{children:"EmbodiedCarbonDataSource"})," both using the same ",(0,i.jsx)(n.code,{children:"ElectricityMaps"})," data source."]}),"\n",(0,i.jsx)(n.h2,{id:"green-impact",children:"Green Impact"}),"\n",(0,i.jsx)(n.p,{children:"Neutral"})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var i=t(6540);const a={},r=i.createContext(a);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);